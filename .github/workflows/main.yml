# This is a basic workflow to help you get started with Actions

name: CI Demo

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: ["main", "feature/branch"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      - name: running a custom script
        run: |
          ls -al

      - name: Log in with Azure Action
        uses: azure/login@v1
        env:
          CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
        with:
          creds: ${{ env.CREDENTIALS }}
      # Need JSON object secret with: clientId, clientSecret, subscriptionId, tenantId

      - uses: azure/aks-set-context@v1
        env:
          CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
        with:
          creds: ${{ env.CREDENTIALS }}
          cluster-name: githubactionsdemo
          resource-group: githubactionsdemo

      # Runs a set of commands using the runners shell
      - name: Run AZ Command
        run: |
          az account show
          az group list

      - name: Run a multi-line script
        #if condition can be used to make commands run regardless of status of prev steps
        if: always()
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

      - name: check java version
        run: java -version

      - name: gradle build
        run: gradle build

      - name: docker version
        run: |
          docker -v
          docker
          docker images -a

      - name: docker build
        run: |
          docker build . -t ${{ secrets.DOCKERHUB_USERNAME }}/demo-kotlin2.0
          docker images -a

      - name: docker login
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: docker image push
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/demo-kotlin2.0
